/********************************************************************
*
*	本文件是FKMMORPG的一部分。本文件版权归属FreeKnightDuzhi(王宏张)所有。
*	E-mail: duzhi5368@163.com
*	QQ: 	281862942
* 	
*	-----------------------------------------------------------------
*
*	文件名：	MD5
*	作者：		FreeKnightDuzhi[ 王宏张 ]
*	文件说明：	MD5 加密算法函数
*
*	修改人:		
*	修改内容:
*********************************************************************/

#pragma once

//==================================================================================================================

namespace FK3DEngine
{
	//--------------------------------------------------------------------------------------------------------------
	namespace MD5Algorithm
	{
		//----------------------------------------------------------------------------------------------------------

		//链接变量
		const int MD5_A = 0x67452301;
		const int MD5_B = 0xefcdab89;
		const int MD5_C = 0x98badcfe;
		const int MD5_D = 0x10325476;

		// MD5 加密数据结构
		struct MD5_Contex
		{
			UINT nState[4];		// ABCD 状态
			UINT nCount[2];		//信息原始位数
			BYTE pBuffer[64];	//输入信息缓存
		};

		//----------------------------------------------------------------------------------------------------------

		//将整型编码为字节
		static void _MD5_EncodeUINTtoBYTE( BYTE* pOutput, const UINT* pInput, const UINT nLen );

		//将字节解码为整型
		static void _MD5_DecodeBYTEtoUINT( UINT* pOutput, const BYTE* PINPUT, const UINT nLen );

		//初始化 MD5 计算数据
		static void _MD5_Init( MD5_Contex* pContex );

		//更新 MD5 计算数据
		static void _MD5_Update( MD5_Contex* pContex, const BYTE* pInput, const UINT nInputLen );

		//结束 MD5 计算
		static void _MD5_Final( BYTE pMD5Key[16], MD5_Contex* pContex );

		//处理 MD5 信息数据
		static void _MD5_Process( UINT pState[4], const BYTE pBlock[64] );

		//----------------------------------------------------------------------------------------------------------
	}
	//--------------------------------------------------------------------------------------------------------------
}

//==================================================================================================================
